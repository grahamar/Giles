# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

GET     /                                                                   controllers.ApplicationController.index

# Authentication
POST    /login                                                              controllers.AuthenticationController.authenticate
GET     /loginWithGoogle                                                    controllers.AuthenticationController.loginWithGoogle
GET     /oauth2callback                                                     controllers.AuthenticationController.oauth2callback(code: Option[String], error: Option[String])
GET     /logout                                                             controllers.AuthenticationController.logout
GET     /signUpForm                                                         controllers.AuthenticationController.signUp
POST    /users/create                                                       controllers.AuthenticationController.createUser
GET     /users/profile/*username                                            controllers.AuthenticationController.profile(username)
POST    /users/profile/create-api-key                                       controllers.AuthenticationController.createApiKey

GET     /search                                                             controllers.ApplicationController.search(filter ?= "")
GET     /search/:projectUrlKey                                              controllers.ApplicationController.searchProject(projectUrlKey, filter ?= "")
GET     /search/:projectUrlKey/:projectVersion                              controllers.ApplicationController.searchProjectVersion(projectUrlKey, projectVersion, filter ?= "")

GET     /projects                                                           controllers.ProjectController.projects
GET     /projects/import                                                    controllers.ProjectController.importProject
POST    /projects/create                                                    controllers.ProjectController.createProject
GET     /projects/plantuml/:encodedSource                                   controllers.StaticDocsController.plantuml(encodedSource)
GET     /projects/:projectUrlKey                                            controllers.ProjectController.project(projectUrlKey)
GET     /projects/:projectUrlKey/versions                                   controllers.ProjectController.projectVersions(projectUrlKey)
POST    /projects/:projectUrlKey/edit                                       controllers.ProjectController.editProject(projectUrlKey)
POST    /projects/:projectUrlKey/favourite                                  controllers.ProjectController.favouriteProject(projectUrlKey)
POST    /projects/:projectUrlKey/unfavourite                                controllers.ProjectController.unfavouriteProject(projectUrlKey)
GET     /projects/:projectUrlKey/pull                                       controllers.ProjectController.pullNewVersions(projectUrlKey)
GET     /projects/:projectUrlKey/rebuild/:projectVersion                    controllers.StaticDocsController.rebuildVersion(projectUrlKey, projectVersion)
GET     /projects/:projectUrlKey/docs/:projectVersion                       controllers.StaticDocsController.projectIndex(projectUrlKey, projectVersion)
GET     /projects/:projectUrlKey/docs/:projectVersion/*file                 controllers.StaticDocsController.projectDocs(projectUrlKey, projectVersion, file)
GET     /projects/:projectUrlKey/pdf/:projectVersion                        controllers.StaticDocsController.pdf(projectUrlKey, projectVersion)

GET     /dashboard                                                          controllers.ApplicationController.dashboard

POST    /publications                                                       controllers.PublicationController.postPublication
GET     /publications/create                                                controllers.PublicationController.create
GET     /publications/:username                                             controllers.PublicationController.publicationsForUser(username)
GET     /publication/:pubUrlKey                                             controllers.PublicationController.publication(pubUrlKey)
POST    /publication/update                                                 controllers.PublicationController.editPublication

# Api
OPTIONS /api/projects                                                       controllers.api.ProjectsApiController.getOptions
GET     /api/projects                                                       controllers.api.ProjectsApiController.getProjects(guid ?= null, name ?= null, url_key ?= null, limit ?= null, offset ?= null)
PUT     /api/projects                                                       controllers.api.ProjectsApiController.putProjects
OPTIONS /api/files                                                          controllers.api.FilesApiController.getOptions
GET     /api/files                                                          controllers.api.FilesApiController.getFiles(guid ?= null, project_guid, filename ?= null, version, title ?= null, url_key ?= null, limit ?= null, offset ?= null)
PUT     /api/files                                                          controllers.api.FilesApiController.putFiles
OPTIONS /api/builds                                                         controllers.api.BuildsApiController.getOptions
GET     /api/builds                                                         controllers.api.BuildsApiController.getBuilds(project_guid, guid ?= null, version ?= null, limit ?= null, offset ?= null)
PUT     /api/builds                                                         controllers.api.BuildsApiController.putBuilds
OPTIONS /api/users                                                          controllers.api.UsersApiController.getOptions
GET     /api/users                                                          controllers.api.UsersApiController.getUsers(guid ?= null, username ?= null, email ?= null, limit ?= null, offset ?= null)
PUT     /api/users                                                          controllers.api.UsersApiController.putUsers
GET     /api/views                                                          controllers.api.ViewsApiController.getViews
GET     /api/system/check-index                                             controllers.api.SystemApiController.checkIndex

# Activator templates
GET     /activator                                                                      controllers.ActivatorTemplatesController.index

POST    /activator/template                                                             controllers.ActivatorTemplatesController.template

GET     /activator/templates/:firstBit/:secondBit/:id/:activatorVersion/:templateName   controllers.ActivatorTemplatesController.templateBundle(firstBit, secondBit, id, activatorVersion, templateName)
GET     /activator/templates/:firstBit/:secondBit/$templateName<.*\.zip>                controllers.ActivatorTemplatesController.templateFile(firstBit, secondBit, templateName: String)

GET     /activator/index/v2/current.properties                                          controllers.ActivatorTemplatesController.currentIndexFile
GET     /activator/index/v2/$indexFile<index-.*\.zip>                                   controllers.ActivatorTemplatesController.indexFile(indexFile: String)


# Map static resources from the /public folder to the /assets URL path
GET     /favicon.ico                                                        controllers.Assets.at(path="/public", file="favicon.ico")
GET     /assets/javascripts/routes                                          controllers.ApplicationController.javascriptRoutes
GET     /assets/*file                                                       controllers.Assets.at(path="/public", file)